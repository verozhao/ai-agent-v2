apiVersion: apps/v1
kind: Deployment
metadata:
  name: anomaly-agent
  labels:
    app: anomaly-agent
spec:
  replicas: 3
  selector:
    matchLabels:
      app: anomaly-agent
  template:
    metadata:
      labels:
        app: anomaly-agent
    spec:
      containers:
      - name: agent
        image: ghcr.io/your-org/anomaly-correction-agent:latest
        imagePullPolicy: Always
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        env:
        - name: LOG_LEVEL
          value: "INFO"
        - name: PYTHONUNBUFFERED
          value: "1"
        volumeMounts:
        - name: models
          mountPath: /app/models
        - name: config
          mountPath: /app/config
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "from agents import AnomalyDetectorAgent; agent = AnomalyDetectorAgent()"
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: models
        emptyDir: {}
      - name: config
        configMap:
          name: agent-config
---
apiVersion: v1
kind: Service
metadata:
  name: anomaly-agent
spec:
  selector:
    app: anomaly-agent
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-config
data:
  field_patterns.json: |
    {
      "field_patterns": {
        "date": {
          "patterns": ["\\d{4}-\\d{2}-\\d{2}", "\\d{2}/\\d{2}/\\d{4}"],
          "common_fields": ["date", "investment_date", "exit_date"]
        },
        "fund_name": {
          "patterns": ["[A-Z][A-Za-z\\s&]+(?:Fund|LP|LLC|Inc)"],
          "common_fields": ["fund", "fund_name", "investment_name"]
        }
      }
    }